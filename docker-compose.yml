version: '3.8'
services:
  neutron-node:
    image: neutron-node
    command: >
      /bin/bash -c '
        #!/bin/bash
        set -e

        # initialize the chain state
        bash /opt/neutron/network/init.sh
        bash /opt/neutron/network/init-neutrond.sh

        # allow CORS requests from dev localhost origin
        BASE_DIR=/opt/neutron/data
        CHAIN_DIR="$$BASE_DIR/$$CHAINID"
        sed -i -e "s/cors_allowed_origins = \[\]/cors_allowed_origins = $$CORS_ALLOWED_ORIGINS/g" "$$CHAIN_DIR/config/config.toml"

        # run chain
        echo "Starting $$CHAINID..."
        neutrond start                             \
            --log_level "$$LOG_LEVEL"              \
            --home "$$CHAIN_DIR"                   \
            --pruning=nothing                      \
            --grpc.address="0.0.0.0:$$GRPCPORT"    \
            --grpc-web.address="0.0.0.0:$$GRPCWEB"
      '
    container_name: neutron-node
    volumes:
      - data:/opt/neutron/data
    ports:
      - 1317:1317
      - 26657:26657
      - 26656:26656
      - 8090:9090
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-warn}
      - CHAINID=${CHAIN_ID:-test-1}
      - GRPCPORT=${GRPC_PORT:-9090}
      - GRPCWEB=${GRPC_WEB:-9091}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-["*"]}
    networks:
      - neutron-testing

  dex-trading-bot:
    build:
      context: .
    depends_on:
      - "neutron-node"
    entrypoint: ["/bin/bash", "./scripts/setup_entrypoint.sh"]
    command: ["/bin/bash", "./scripts/run_trade_bot.sh"]
    deploy:
      replicas: ${BOTS:-1}
    env_file:
      - ${ENV_FILE:-.env}
    environment:
      - BOT_RAMPING_DELAY=${BOT_RAMPING_DELAY:-3} # seconds between starting each bot
      # override env file with variables that connect to the neutron-node service here
      - CHAIN_ID=${CHAIN_ID:-test-1}
      - RPC_ADDRESS=${RPC_ADDRESS:-http://neutron-node:26657}
      - API_ADDRESS=${API_ADDRESS:-http://neutron-node:1317}
      # this var is set when using `make test-trade-bot`
      - TRADE_DURATION_SECONDS=${TRADE_DURATION_SECONDS:-}
      # use (from default local node test wallets) up to about 10,000,000 (display) tokens in each pool
      # use range of token amounts to visualize multiple orders of magnitude in dev UI
      - TOKEN_CONFIG_DEFAULT=
        {
          "10000000000000uibcusdc<>10000000000000uibcatom":10,
          "100000000000uibcusdc<>100000000000untrn":{
            "price":2,
            "ticks":50
          },
          "1000000000uibcatom<>1000000000untrn":{
            "price":0.2,
            "ticks":30
          },
          "defaults":{
            "fees":[0,1,2,3,4,5,10,20,50,100,150,200],
            "gas":"1000000000untrn"
          }
        }
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - neutron-testing

volumes:
  data:
    name: neutron-testing-data
    external: false

networks:
  neutron-testing:
    name: neutron-testing
    external: false
